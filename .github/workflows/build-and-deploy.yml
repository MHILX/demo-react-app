name: Build Test & Deploy Codebase

on: 
  push:
    branches:
      - main
      - 'feature/*'
      - 'bugfix/*'
      - 'hotfix/*'
    paths-ignore:
      - '**.md'  # Ignore changes in Markdown files
  pull_request:
    branches:
      - master
      - main
      - 'release/*'

jobs:
  build:
    name: Prepare Codebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4 

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: npm install, build, and test
        run: |
            npm install
            npm run build --if-present
            npm run test --if-present

      - name: Zip artifact for deployment
        run: zip release.zip ./build/* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: release.zip

    #   - name: Install Dependencies
    #     run: npm ci
    
  deploy-dev:
    name: Deploy to Dev
    needs: build
    runs-on: ubuntu-latest
    environment: 
      name: dev
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Print Environment Variables & Secrets
        run: |
          echo deploying to dev...
          echo 'MY_ENV_SECRET: ${{ secrets.MY_ENV_SECRET }}'
          echo 'MY_ENV_VARIABLE: ${{ vars.MY_ENV_VARIABLE }}'

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app
  
      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
            app-name: mhilx
            # slot-name: 'production'
            publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
            package: .

  deploy-qa:
    name: Deploy to QA
    needs: [build, deploy-dev]
    runs-on: ubuntu-latest
    environment: 
      name: qa
      url: https://qa.example.com
    steps:
      - name: Deploy to QA
        run: |
          echo deploying to qa...
          echo 'MY_ENV_SECRET: ${{ secrets.MY_ENV_SECRET }}'
          echo 'MY_ENV_VARIABLE: ${{ vars.MY_ENV_VARIABLE }}'

  deploy-prod:
    name: Deploy to Prod
    needs: [build, deploy-dev, deploy-qa]
    runs-on: ubuntu-latest
    environment: 
      name: prod
      url: https://example.com
    steps:
      - name: Deploy to QA
        run: |
          echo deploying to qa...
          echo 'MY_ENV_SECRET: ${{ secrets.MY_ENV_SECRET }}'
          echo 'MY_ENV_VARIABLE: ${{ vars.MY_ENV_VARIABLE }}'